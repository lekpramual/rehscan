{"version":3,"sources":["components/scans/components/common/Message.js","components/scans/components/locaction/LocationToPrint.js","components/scans/components/locaction/LocactionList.js","components/scans/components/locaction/LocactionAdd.js","components/scans/components/locaction/Locaction.js","components/scans/containers/Locaction.js","managers/AuthService.js"],"names":["Message","props","className","style","marginBottom","alert","msg","LocationToPrint","state","records","nextProps","console","log","record","isData","this","setState","type","justify","marginTop","scan_location","id","value","JSON","stringify","size","includeMargin","React","Component","LocactionList","componentRef","useRef","dispatch","useDispatch","useState","setRecord","useSelector","scanlocation","indexData","indexStatus","indexFailure","iscount","isdata","map","rs","data","length","isCheckData","useEffect","indexLocation","index","key","scan_id","latitude","longitude","status_id","trigger","href","onClick","content","current","pageStyle","verticalAlign","colSpan","ref","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","location","setLocation","show","setShow","handleClose","handleSubmit","e","preventDefault","isGood","formIsValidSearch","confirm","coords","toFixed","textAlign","isGeolocationAvailable","isGeolocationEnabled","Modal","onHide","Header","closeButton","Title","Body","onSubmit","htmlFor","placeholder","disabled","isvalid","classNames","onChange","target","Footer","Button","variant","Locaction","Auth","AuthService","loggedIn","window","replace","lat","lon","scanName","Promise","resolve","reject","createMsg","a","createLocation","then","res","setTimeout","reload","status","Swal","fire","icon","title","text","showConfirmButton","timer","catch","getToken","jwt","sign","localStorage","setItem","getItem","decode"],"mappings":"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","file":"static/js/12.de80fb27.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Message = (props) => {\n  return (\n    <div className=\"row\" style={{ marginBottom: 10 }}>\n      <div className=\"col-12\">\n        <div className={`${props.alert} alert-dismissible`}>\n          <h5>แจ้งเตือน !</h5>\n          {props.msg}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport QRcode from \"qrcode.react\";\n\nexport class LocationToPrint extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      records: []\n    };\n  }\n  // ปรับข้อมูล เมื่อ มีการ อัปเดต สโตส\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    console.log(\"5555\");\n    console.log(nextProps.record);\n    // get date_seach\n    var isData = [];\n\n    if (nextProps.record !== this.state.records) {\n      console.log(\"666\");\n      isData = nextProps.record;\n      console.log(isData);\n      this.setState({\n        records: isData\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"p-5\">\n        <div\n          className=\"row\"\n          type=\"flex\"\n          justify=\"space-between\"\n          className=\"py-2 text-muted\"\n        >\n          <div>\n            <middle>REH-20210511</middle>\n          </div>\n          <div className=\"text-right\">\n            <middle>วันที่ 11/5/2564</middle>\n          </div>\n        </div>\n\n        <div\n          className=\"py-2 text-muted\"\n          type=\"flex\"\n          justify=\"center\"\n          style={{ marginTop: \"40px\" }}\n        >\n          <div className=\"text-center\">\n            {/* <Avatar\n      src=\"/static/logo/logo512.png\"\n      style={{ width: \"200px\", height: \"200px\" }}\n    /> */}\n          </div>\n        </div>\n        <div\n          className=\"py-2 text-muted\"\n          type=\"flex\"\n          justify=\"center\"\n          style={{ marginTop: \"-10px\" }}\n        >\n          <div className=\"text-center\">\n            <h2>โรงพยาบาลร้อยเอ็ด</h2>\n          </div>\n        </div>\n        <div\n          className=\"py-2 text-muted\"\n          type=\"flex\"\n          justify=\"center\"\n          style={{ marginTop: \"-20px\" }}\n        >\n          <div className=\"text-center\">\n            {/* <h3>{JSON.stringify(this.state.records)}</h3> */}\n            <h3>{this.state.records.scan_location}</h3>\n          </div>\n        </div>\n\n        <div\n          className=\"py-2 text-muted\"\n          type=\"flex\"\n          justify=\"center\"\n          style={{ marginTop: \"-20px\" }}\n        >\n          {/* style={{ marginTop: \"50px\" }} */}\n          <div className=\"text-center\">\n            <QRcode\n              id=\"myqr\"\n              value={`${JSON.stringify(this.state.records)}`}\n              size={320}\n              includeMargin={true}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport ReactToPrint from \"react-to-print\";\nimport QRcode from \"qrcode.react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { indexLocation } from \"../../../../reduxs/actions/ScanLocation\";\n\nimport { LocationToPrint } from \"./LocationToPrint\";\n\nconst LocactionList = () => {\n  const componentRef = useRef();\n  const dispatch = useDispatch();\n\n  const [record, setRecord] = useState([]);\n\n  const state = useSelector((state) => state.scanlocation.indexData);\n  const indexStatus = useSelector((state) => state.scanlocation.indexStatus);\n  const indexFailure = useSelector((state) => state.scanlocation.indexFailure);\n\n  function isCheckData() {\n    let iscount;\n    var isdata = [];\n    state.map((rs) => {\n      if (rs.data.length === 0) {\n        iscount = false;\n        return iscount;\n      } else {\n        iscount = true;\n        isdata = rs.data;\n        return { iscount, isdata };\n      }\n    });\n    return { iscount, isdata };\n  }\n\n  const { iscount, isdata } = isCheckData();\n\n  useEffect(() => {\n    dispatch(indexLocation());\n  }, [record]);\n\n  // const TableList = () => {\n  //   return (\n  //     <div className=\"row\">\n  //       <div className=\"col-12 table table-responsive \">\n  //         <table className=\"table table-bordered table-hover text-nowrap\">\n  //           <thead>\n  //             <tr>\n  //               <td>ลำดับ</td>\n  //               <td>ละติจูด</td>\n  //               <td>ลองติจูด</td>\n  //               <td>สถานที่</td>\n  //               <td>สถานะ</td>\n  //               <td>คำสั่ง</td>\n  //             </tr>\n  //           </thead>\n  //           <tbody>\n  //             {iscount ? (\n  //               isdata.map((rs, index) => {\n  //                 return (\n  //                   <tr key={rs.scan_id}>\n  //                     <td>{index + 1}</td>\n  //                     <td>{rs.latitude}</td>\n  //                     <td>{rs.longitude}</td>\n  //                     <td>{rs.scan_location}</td>\n  //                     <td>\n  //                       {rs.status_id === 1 ? (\n  //                         <span className=\"badge bg-success\">เปิดใช้งาน</span>\n  //                       ) : (\n  //                         <span className=\"badge bg-danger\">ปิดใช้งาน</span>\n  //                       )}\n  //                     </td>\n  //                     <td>\n  //                       <ReactToPrint\n  //                         trigger={() => (\n  //                           <a href=\"javascript:;\">\n  //                             <button\n  //                               className=\"btn btn-default\"\n  //                               onClick={() => setRecord(rs)}\n  //                             >\n  //                               <i className=\"fas fa-qrcode\" />\n  //                             </button>\n  //                           </a>\n  //                         )}\n  //                         content={() => componentRef.current}\n  //                         // onBeforePrint={() =>\n  //                         //   // console.log(rs)\n  //                         //   setRecord(rs)\n  //                         // }\n  //                         pageStyle=\"@page { size: 11.694in 8.264in landscape} \"\n  //                       />\n  //                       {/* <div style={{ display: \"none\" }}>\n  //                         <LocationToPrint ref={componentRef} record={record} />\n  //                       </div> */}\n  //                     </td>\n  //                   </tr>\n  //                 );\n  //               })\n  //             ) : (\n  //               <tr key=\"emtpydata\">\n  //                 <td\n  //                   style={{ verticalAlign: \"middle\" }}\n  //                   colSpan=\"7\"\n  //                   className=\"text-center\"\n  //                 >\n  //                   {indexStatus === \"loading\" ? (\n  //                     <div className=\"overlay\">\n  //                       <i className=\"fas fa-2x fa-sync-alt fa-spin\" />\n  //                     </div>\n  //                   ) : indexStatus === \"failed\" ? (\n  //                     <p className=\"text-danger\">{indexFailure}</p>\n  //                   ) : (\n  //                     \"--- ไม่มีข้อมูล ---\"\n  //                   )}\n  //                 </td>\n  //               </tr>\n  //             )}\n  //           </tbody>\n  //         </table>\n  //       </div>\n  //     </div>\n  //   );\n  // };\n\n  return (\n    <div>\n      {JSON.stringify(record)}\n      <div className=\"row\">\n        <div className=\"col-12 table table-responsive \">\n          <table className=\"table table-bordered table-hover text-nowrap\">\n            <thead>\n              <tr>\n                <td>ลำดับ</td>\n                <td>ละติจูด</td>\n                <td>ลองติจูด</td>\n                <td>สถานที่</td>\n                <td>สถานะ</td>\n                <td>คำสั่ง</td>\n              </tr>\n            </thead>\n            <tbody>\n              {iscount ? (\n                isdata.map((rs, index) => {\n                  return (\n                    <tr key={rs.scan_id}>\n                      <td>{index + 1}</td>\n                      <td>{rs.latitude}</td>\n                      <td>{rs.longitude}</td>\n                      <td>{rs.scan_location}</td>\n                      <td>\n                        {rs.status_id === 1 ? (\n                          <span className=\"badge bg-success\">เปิดใช้งาน</span>\n                        ) : (\n                          <span className=\"badge bg-danger\">ปิดใช้งาน</span>\n                        )}\n                      </td>\n                      <td>\n                        <ReactToPrint\n                          trigger={() => (\n                            <a href=\"javascript:;\">\n                              <button\n                                className=\"btn btn-default\"\n                                onClick={() => setRecord(rs)}\n                              >\n                                <i className=\"fas fa-qrcode\" />\n                              </button>\n                            </a>\n                          )}\n                          content={() => componentRef.current}\n                          pageStyle=\"@page { size: 11.694in 8.264in landscape} \"\n                        />\n                        {/* <div style={{ display: \"none\" }}>\n                          <LocationToPrint ref={componentRef} record={record} />\n                        </div> */}\n                      </td>\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr key=\"emtpydata\">\n                  <td\n                    style={{ verticalAlign: \"middle\" }}\n                    colSpan=\"7\"\n                    className=\"text-center\"\n                  >\n                    {indexStatus === \"loading\" ? (\n                      <div className=\"overlay\">\n                        <i className=\"fas fa-2x fa-sync-alt fa-spin\" />\n                      </div>\n                    ) : indexStatus === \"failed\" ? (\n                      <p className=\"text-danger\">{indexFailure}</p>\n                    ) : (\n                      \"--- ไม่มีข้อมูล ---\"\n                    )}\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <LocationToPrint ref={componentRef} record={record} />\n    </div>\n  );\n};\n\nexport default LocactionList;\n","import React, { useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\n\nimport { Modal, Button } from \"react-bootstrap\";\nimport { geolocated } from \"react-geolocated\";\n\nimport ScanInOutMessage from \"../common/Message\";\n\nfunction LocactionAdd(props) {\n  const [location, setLocation] = useState(\"\");\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  // handle from validate\n  const formIsValidSearch = () => {\n    let isGood = true;\n    if (location === \"\") {\n      setLocation(\"\");\n      isGood = false;\n    }\n    return isGood;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (formIsValidSearch()) {\n      props.confirm(\n        props.coords.latitude.toFixed(4),\n        props.coords.longitude.toFixed(4),\n        location\n      );\n\n      // Hide Popup\n      setShow(false);\n      setLocation(\"\");\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Loading ...\");\n  }, [show]);\n\n  return (\n    <>\n      <div className=\"row\" style={{ marginBottom: 10 }}>\n        <div className=\"col-12\" style={{ textAlign: \"right\" }}>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={handleShow}\n          >\n            <i className=\"fas fa-plus\" /> เพิ่มจุดสแกน{\" \"}\n          </button>\n        </div>\n      </div>\n\n      {!props.isGeolocationAvailable ? (\n        <ScanInOutMessage\n          msg=\"--- เบราว์เซอร์ของคุณไม่รองรับ แนะนำ Chome---\"\n          alert=\"alert alert-warning\"\n        />\n      ) : !props.isGeolocationEnabled ? (\n        <ScanInOutMessage\n          msg=\"--- กรุณาเปิด GPS มือถือของท่าน &hellip; ---\"\n          alert=\"alert alert-warning\"\n        />\n      ) : props.coords ? (\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <Modal show={show} onHide={handleClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>เพิ่มจุดสแกน</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <form onSubmit={(e) => handleSubmit(e)}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"InputMember\" className=\"col-form-label\">\n                      {\" \"}\n                      ละติจูด\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"ละติจูด\"\n                      value={props.coords.latitude.toFixed(4)}\n                      disabled\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"InputMember\" className=\"col-form-label\">\n                      {\" \"}\n                      ลองติจูด\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"ลองติจูด\"\n                      value={props.coords.longitude.toFixed(4)}\n                      disabled\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"InputMember\" className=\"col-form-label\">\n                      {\" \"}\n                      สถานที่ {location.isvalid}\n                    </label>\n                    <input\n                      type=\"text\"\n                      // className=\"form-control\"\n                      className={classNames(\"form-control\", {\n                        \"form-control is-invalid\": location.isvalid === false\n                      })}\n                      placeholder=\"สถานที่\"\n                      value={location}\n                      onChange={(e) => setLocation(e.target.value)}\n                    />\n                  </div>\n                </form>\n              </Modal.Body>\n              <Modal.Footer className=\"modal-footer justify-content-between p-0\">\n                <Button variant=\"secondary\" onClick={handleClose}>\n                  ปิด\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  onClick={(e) => handleSubmit(e)}\n                  disabled={location === \"\" ? true : false}\n                >\n                  บันทึก\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        </div>\n      ) : (\n        <div className=\"col-12\" style={{ textAlign: \"center\" }}>\n          <ScanInOutMessage\n            msg=\"--- กำลังค้นหาตำแหน่ง &hellip; ---\"\n            alert=\"alert alert-info\"\n          />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false\n  },\n  userDecisionTimeout: 5000\n})(LocactionAdd);\n","import React, { useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport LocactionList from \"./LocactionList\";\nimport LocactionAdd from \"./LocactionAdd\";\nimport AuthService from \"../../../../managers/AuthService\";\n\nimport { useDispatch } from \"react-redux\";\nimport { createLocation } from \"../../../../reduxs/actions/ScanLocation\";\n\nfunction Locaction() {\n  const dispatch = useDispatch();\n  const Auth = new AuthService(\"http://localhost:3000/\");\n\n  // Confirm From Search\n  const onConfirm = (latitude, longitude, location) => {\n    const data = {\n      lat: latitude,\n      lon: longitude,\n      scanName: location\n    };\n    let Create = new Promise(function (resolve, reject) {\n      async function createMsg() {\n        return await dispatch(createLocation(data)).then((res) => {\n          return res[0].msg;\n        });\n      }\n      // get result by function\n      (async function () {\n        let resStatus = await createMsg();\n        if (resStatus === \"created successful\") {\n          setTimeout(() => {\n            window.location.reload();\n          }, 1600);\n          resolve(true);\n        } else {\n          reject(false);\n        }\n      })();\n    });\n\n    // promiss status and msg\n    Create.then((status) => {\n      status\n        ? Swal.fire({\n            // position: \"top-center\",\n            icon: \"success\",\n            title: \"สำเร็จ\",\n            text: \"ลงทะเบียนจุดสแกนเรียบร้อย\",\n            showConfirmButton: false,\n            timer: 1500\n          })\n        : Swal.fire({\n            // position: \"top-center\",\n            icon: \"warning\",\n            title: \"ผิดพลาด\",\n            text: \"ลงทะเบียนผิดพลาด\",\n            showConfirmButton: false,\n            timer: 1500\n          });\n    }).catch((e) => {\n      Swal.fire({\n        // position: \"top-center\",\n        icon: \"error\",\n        title: \"ผิดพลาด\",\n        text: \"ลงทะเบียนผิดพลาด\",\n        showConfirmButton: false,\n        timer: 1500\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (!Auth.loggedIn()) {\n      window.location.replace(\"/rehscan/#/scan/member-register\");\n    }\n  }, [Auth, dispatch]);\n  return (\n    <section className=\"content\" style={{ marginTop: -16 }}>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card\">\n              <div className=\"card-body \">\n                <LocactionAdd confirm={onConfirm} />\n                <LocactionList />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Locaction;\n","import React from \"react\";\nimport LocactionComponent from \"../components/locaction/Locaction\";\nfunction Locaction() {\n  return (\n    <div>\n      <LocactionComponent />\n    </div>\n  );\n}\n\nexport default Locaction;\n","import decode from \"jwt-decode\";\nimport sign from \"jwt-encode\";\n\nexport default class AuthService {\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken(); // GEtting token from localstorage\n    return !!token; // handwaiving here\n  }\n\n  setToken(data) {\n    const secret = \"secret\";\n    const jwt = sign(data, secret);\n    // Saves user token to localStorage\n    localStorage.setItem(\"id_token\", jwt);\n  }\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n  }\n  getProfile() {\n    // Using jwt-decode npm package to decode the token\n    return decode(this.getToken());\n  }\n}\n"],"sourceRoot":""}