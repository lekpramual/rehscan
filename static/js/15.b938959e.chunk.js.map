{"version":3,"sources":["components/scans/components/common/Search.js","components/scans/components/scan/ScanList.js","components/scans/components/scan/Scan.js","components/scans/containers/Scan.js","managers/AuthService.js","components/scans/components/common/profile.js"],"names":["moment","locale","registerLocale","th","Search","props","useState","startDate","setStartDate","endDate","setEndDate","handleSubmit","e","preventDefault","isGood","formIsValidSearch","console","log","confirm","format","onConfirmClick","className","onSubmit","htmlFor","isClearable","dateFormat","selected","onChange","date","placeholderText","type","ScanList","dispatch","useDispatch","showData","useSelector","state","scanuser","showStatus","showFailure","Auth","AuthService","iscount","isdata","map","rs","lengtd","data","isCheckData","useEffect","showScan","getProfile","id","index","key","checktime","scan_location","checktype","style","verticalAlign","colSpan","Scan","loggedIn","window","location","replace","marginTop","msg","date_start","date_end","this","getToken","jwt","sign","localStorage","setItem","getItem","decode","profile","textAlign","name"],"mappings":"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","file":"static/js/15.b938959e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n// import classNames from \"classnames\";\n\nimport moment from \"moment\";\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale } from \"react-datepicker\";\n\n/**\n * Style\n */\nimport \"react-datepicker/dist/react-datepicker.css\";\n//import moment from \"moment\";\nimport th from \"date-fns/locale/th\";\nimport \"moment/locale/th.js\";\nmoment.locale(\"th\");\nregisterLocale(\"th\", th);\n\nfunction Search(props) {\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n\n  // handle confirm on props with record component\n  const onConfirmClick = () => {\n    if (props.confirm) {\n      const msg = \"SearchList\";\n      props.confirm(\n        msg,\n        moment(startDate).format(\"YYYY-MM-DD\"),\n        moment(endDate).format(\"YYYY-MM-DD\")\n      );\n    } else {\n      props.confirm(\"\");\n    }\n  };\n  // handle from validate\n  const formIsValidSearch = () => {\n    let isGood = true;\n    if (startDate === \"\" || startDate === null) {\n      isGood = false;\n    }\n    if (endDate === \"\" || endDate === null) {\n      isGood = false;\n    }\n    if (!isGood) {\n      // setData({\n      //   ...data\n      // });\n    }\n    return isGood;\n  };\n  // handle onclick submit\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (formIsValidSearch()) {\n      console.log(startDate, endDate);\n      onConfirmClick();\n    }\n  };\n  return (\n    <div className=\"card-header\">\n      <div className=\"row\">\n        <div className=\"col-md-12 col-12\">\n          <form onSubmit={(e) => handleSubmit(e)}>\n            <div className=\"row\">\n              <div className=\"col-md-5 col-12\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"InputMember\" className=\"col-form-label\">\n                    {\" \"}\n                    วันที่เริ่มต้น\n                  </label>\n                  {/* <DatePicker\n                    locale=\"th\"\n                    className=\"form-control\"\n                    selected={data.start.value}\n                    onChange={(e) =>\n                      setData({\n                        ...data,\n                        start: {\n                          value: moment(e).toDate(),\n                          isValid: true\n                        }\n                      })\n                    } // เฉพาะเมื่อค่ามีการเปลี่ยนแปลง\n                    dateFormat=\"dd LLLL yyyy\"\n                    placeholderText=\"กรุณาเลือกวันที่\"\n                    //isClearable\n                    isClearable={data.start.value !== \"\" ? true : false}\n                  /> */}\n\n                  <DatePicker\n                    locale=\"th\"\n                    className=\"form-control\"\n                    isClearable={startDate !== \"\" ? true : false}\n                    dateFormat=\"dd LLLL yyyy\"\n                    selected={startDate}\n                    onChange={(date) => setStartDate(date)}\n                    placeholderText=\"กรุณาเลือกวันที่เริ่มต้น\"\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-5 col-12\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"InputMemberName\" className=\"col-form-label\">\n                    {\" \"}\n                    วันที่สิ้นสุด\n                  </label>\n                  <DatePicker\n                    locale=\"th\"\n                    className=\"form-control\"\n                    isClearable={endDate !== \"\" ? true : false}\n                    dateFormat=\"dd LLLL yyyy\"\n                    selected={endDate}\n                    onChange={(date) => setEndDate(date)}\n                    placeholderText=\"กรุณาเลือกวันที่สิ้นสุด\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"col-md-2 col-12\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"InputMember\" className=\"col-form-label\">\n                    &nbsp;\n                  </label>\n\n                  <button\n                    // style={{ marginTop: 15 }}\n                    type=\"submit\"\n                    className=\"btn btn-default btn-block\"\n                  >\n                    <i className=\"fa fa-search\" /> ค้นหา\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useEffect } from \"react\";\nimport moment from \"moment\";\nimport \"moment/locale/th\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport AuthService from \"../../../../managers/AuthService\";\nimport { showScan } from \"../../../../reduxs/actions/ScanInOut\";\n\nmoment.locale(\"th\");\n\nconst ScanList = (props) => {\n  const dispatch = useDispatch();\n  const showData = useSelector((state) => state.scanuser.showData);\n  const showStatus = useSelector((state) => state.scanuser.showStatus);\n  const showFailure = useSelector((state) => state.scanuser.showFailure);\n  const Auth = new AuthService(\"http://localhost:3000/\");\n\n  function isCheckData() {\n    let iscount;\n    var isdata = [];\n    showData.map((rs) => {\n      if (rs.lengtd === 0) {\n        iscount = false;\n        return iscount;\n      } else {\n        iscount = true;\n        isdata = rs.data;\n        return { iscount, isdata };\n      }\n    });\n    return { iscount, isdata };\n  }\n\n  const { iscount, isdata } = isCheckData();\n  useEffect(() => {\n    dispatch(showScan(Auth.getProfile().id, null, null));\n  }, [dispatch]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 table table-responsive \">\n        <table className=\"table table-bordered table-hover text-nowrap\">\n          <thead>\n            <tr>\n              <td>ลำดับ</td>\n              <td>วันที่</td>\n              <td>เวลา</td>\n              <td>สถานที่</td>\n              <td>สถานะ</td>\n            </tr>\n          </thead>\n          <tbody>\n            {iscount ? (\n              isdata.map((rs, index) => {\n                return (\n                  <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td>{moment(rs.checktime).format(\"ll\")}</td>\n                    <td>{moment(rs.checktime).format(\"HH:mm:ss\")}</td>\n                    <td>{rs.scan_location}</td>\n                    <td>\n                      {rs.checktype === \"1\" ? (\n                        <span className=\"badge bg-success\">ออก</span>\n                      ) : (\n                        <span className=\"badge bg-danger\">เข้า</span>\n                      )}\n                    </td>\n                  </tr>\n                );\n              })\n            ) : (\n              <tr key=\"emtpydata\">\n                <td\n                  style={{ verticalAlign: \"middle\" }}\n                  colSpan=\"7\"\n                  className=\"text-center\"\n                >\n                  {showStatus === \"loading\" ? (\n                    <div className=\"overlay\">\n                      <i className=\"fas fa-2x fa-sync-alt fa-spin\" />\n                    </div>\n                  ) : showStatus === \"failed\" ? (\n                    <p className=\"text-danger\">{showFailure}</p>\n                  ) : (\n                    \"--- ไม่มีข้อมูล ---\"\n                  )}\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default ScanList;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport SearchMember from \"../common/Search\";\nimport { showScan } from \"../../../../reduxs/actions/ScanInOut\";\nimport ScanList from \"./ScanList\";\n\nimport AuthService from \"../../../../managers/AuthService\";\nimport { profile as Profile } from \"../common/profile\";\nfunction Scan() {\n  const dispatch = useDispatch();\n  const Auth = new AuthService(\"http://localhost:3000/\");\n\n  // Confirm From Search\n  const onConfirm = (msg, date_start, date_end) => {\n    if (msg === \"SearchList\") {\n      console.log(date_start, date_end);\n      dispatch(showScan(Auth.getProfile().id, date_start, date_end));\n    }\n  };\n\n  useEffect(() => {\n    if (!Auth.loggedIn()) {\n      window.location.replace(\"/rehscan/#/scan/member-register\");\n    }\n  }, [Auth, dispatch]);\n\n  return (\n    <section className=\"content\" style={{ marginTop: -16 }}>\n      <div className=\"container-fluid\">\n        <Profile />\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card\">\n              <SearchMember confirm={onConfirm} />\n              <div className=\"card-body\">\n                <ScanList />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Scan;\n","import React from \"react\";\nimport ScanComponent from \"../components/scan/Scan\";\n\nfunction Scan() {\n  return (\n    <div>\n      <ScanComponent />\n    </div>\n  );\n}\n\nexport default Scan;\n","import decode from \"jwt-decode\";\nimport sign from \"jwt-encode\";\n\nexport default class AuthService {\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken(); // GEtting token from localstorage\n    return !!token; // handwaiving here\n  }\n\n  setToken(data) {\n    const secret = \"secret\";\n    const jwt = sign(data, secret);\n    // Saves user token to localStorage\n    localStorage.setItem(\"id_token\", jwt);\n  }\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n  }\n  getProfile() {\n    // Using jwt-decode npm package to decode the token\n    return decode(this.getToken());\n  }\n}\n","import React from \"react\";\nimport AuthService from \"../../../../managers/AuthService\";\nexport const profile = () => {\n  const Auth = new AuthService(\"http://localhost:3000/\");\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <div className=\"card\">\n          <div className=\"card-body\" style={{ textAlign: \"center\" }}>\n            <span className=\"text-muted\">\n              <i className=\"fas fa-user\" /> {Auth.getProfile().name}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}