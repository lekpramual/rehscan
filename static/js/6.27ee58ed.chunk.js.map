{"version":3,"sources":["assets/ico/003-fingerprint-2.svg","components/scans/components/chkinout/arePoints.js","components/scans/components/chkinout/ScanInOutMessage.js","components/scans/components/chkinout/ScanInOutList.js","components/scans/components/common/ScanInOut.js","components/scans/components/chkinout/ScanInOut.js","components/scans/containers/ScanInOut.js"],"names":["module","exports","arePointsNear","checkPoint","centerPoint","km","ky","kx","Math","cos","PI","lat","dx","abs","lng","dy","sqrt","ScanInOutMessage","props","className","style","marginBottom","alert","msg","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","useState","qrscan","setQrscan","setShow","useEffect","show","isGeolocationAvailable","isGeolocationEnabled","coords","delay","onError","err","console","error","onScan","e","data","undefined","log","obj","JSON","parse","arePoints","latitude","longitude","confirm","handleScan","toFixed","width","marginTop","textAlign","ScanInOut","padding","type","onClick","src","memberchkinout","alt","marginRight","marginLeft","paddingBottom","setMsg","onConfirm","isshow"],"mappings":"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","file":"static/js/6.27ee58ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/003-fingerprint-2.2e6dfe5e.svg\";","function arePointsNear(checkPoint, centerPoint, km) {\n  var ky = 40000 / 360;\n  var kx = Math.cos((Math.PI * centerPoint.lat) / 180.0) * ky;\n  var dx = Math.abs(centerPoint.lng - checkPoint.lng) * kx;\n  var dy = Math.abs(centerPoint.lat - checkPoint.lat) * ky;\n  return Math.sqrt(dx * dx + dy * dy) <= km;\n}\n\nexport default arePointsNear;\n","import React from \"react\";\n\nconst ScanInOutMessage = (props) => {\n  return (\n    <div className=\"row\" style={{ marginBottom: 10 }}>\n      <div className=\"col-12\">\n        <div className={`${props.alert} alert-dismissible`}>\n          <h5>แจ้งเตือน !</h5>\n          {props.msg}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ScanInOutMessage;\n","import React, { useState, useEffect } from \"react\";\nimport arePoints from \"./arePoints\";\nimport QrReader from \"react-qr-reader\";\nimport { Redirect } from \"react-router\";\nimport { geolocated } from \"react-geolocated\";\n\nimport { toast } from \"react-toastify\";\n\nimport ScanInOutMessage from \"./ScanInOutMessage\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nconst ScanInOutList = (props) => {\n  const [qrscan, setQrscan] = useState([]);\n  const [show, setShow] = useState(true);\n\n  const handleScan = (data, lat, lng) => {\n    if (data !== null && data !== undefined) {\n      console.log(data[0][\"latitude\"]);\n      var obj = JSON.parse(data);\n\n      setQrscan(obj);\n      console.log(obj);\n      arePoints(\n        {\n          lat: lat,\n          lng: lng\n        },\n        {\n          lat: obj.latitude,\n          // state.qrscan !== undefined\n          //   ? state.qrscan.latitude\n          //   ? state.qrscan.latitude\n          //   : 0,\n          lng: obj.longitude\n          // state.qrscan !== undefined\n          //   ? state.qrscan.longitude\n          //   : 0\n        },\n        0.2\n      )\n        ? props.confirm(props.msg, false)\n        : setShow(true);\n    }\n  };\n\n  const handleError = (err) => {\n    console.error(err);\n  };\n\n  useEffect(() => {}, [props.show, props.msg]);\n\n  return props.msg === \"chkin\" || props.msg === \"chkout\" ? (\n    !props.isGeolocationAvailable ? (\n      <ScanInOutMessage\n        msg=\"--- เบราว์เซอร์ของคุณไม่รองรับ แนะนำ Chome---\"\n        alert=\"alert alert-warning\"\n      />\n    ) : !props.isGeolocationEnabled ? (\n      <div>\n        <ScanInOutMessage\n          msg=\"--- กรุณาเปิด GPS มือถือของท่าน ---\"\n          alert=\"alert alert-warning\"\n        />\n      </div>\n    ) : props.coords ? (\n      <>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            {props.show ? (\n              <QrReader\n                delay={300}\n                onError={handleError}\n                onScan={(e) =>\n                  handleScan(\n                    e,\n                    props.coords.latitude.toFixed(4),\n                    props.coords.longitude.toFixed(4)\n                  )\n                }\n                style={{ width: \"100%\" }}\n              />\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n\n        <div className=\"row\" style={{ marginTop: 10 }}>\n          {arePoints(\n            {\n              lat: props.coords.latitude.toFixed(4),\n              lng: props.coords.longitude.toFixed(4)\n            },\n            {\n              lat: qrscan !== undefined ? qrscan.latitude : 0,\n              lng: qrscan !== undefined ? qrscan.longitude : 0\n            },\n            0.2\n          ) ? (\n            <div className=\"col-12\">\n              {props.show ? (\n                <ScanInOutMessage\n                  msg=\"---  ระยะห่างจากจุดสแกน ไม่เกิน 200 เมตร ---\"\n                  alert=\"alert alert-warning\"\n                />\n              ) : (\n                <ScanInOutMessage\n                  msg=\"บันทึกข้อมูลลงเวลาเรียบร้อย\"\n                  alert=\"alert alert-success\"\n                />\n              )}\n\n              {/* {_commitAutoSave()} */}\n            </div>\n          ) : (\n            <div className=\"col-12\" style={{ textAlign: \"center\" }}>\n              <ScanInOutMessage\n                msg=\"---  ระยะห่างจากจุดสแกน ไม่เกิน 200 เมตร ---\"\n                alert=\"alert alert-warning\"\n              />\n            </div>\n          )}\n        </div>\n      </>\n    ) : (\n      <div>กำลังค้นหาตำแหน่ง &hellip; </div>\n    )\n  ) : (\n    <div className=\"col-12\" style={{ textAlign: \"center\" }}>\n      <ScanInOutMessage\n        msg=\"--- กด สแกนเข้า - ออก เพื่อทำการสแกน ---\"\n        alert=\"alert alert-info\"\n      />\n    </div>\n  );\n};\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false\n  },\n  userDecisionTimeout: 5000\n})(ScanInOutList);\n","import React, { useState } from \"react\";\nimport memberchkinout from \"../../../../assets/ico/003-fingerprint-2.svg\";\n\nfunction ScanInOut(props) {\n  return (\n    <div className=\"card-header\">\n      <div className=\"row\">\n        <div className=\"col-md-6 col-12\" style={{ padding: 2 }}>\n          <button\n            type=\"submit\"\n            className=\"btn btn-default btn-lg btn-block\"\n            onClick={() => props.confirm(\"chkin\", true)}\n          >\n            <img\n              src={memberchkinout}\n              alt=\"memberchk in\"\n              style={{\n                width: 50,\n                marginRight: 5,\n                marginLeft: -7,\n                paddingBottom: 2\n              }}\n            />\n            <p>สแกนเข้า</p>\n          </button>\n        </div>\n        <div className=\"col-md-6 col-12\" style={{ padding: 2 }}>\n          <button\n            type=\"submit\"\n            className=\"btn btn-default btn-lg btn-block\"\n            onClick={() => props.confirm(\"chkout\", true)}\n          >\n            <img\n              src={memberchkinout}\n              alt=\"memberchk out\"\n              style={{\n                width: 50,\n                marginRight: 5,\n                marginLeft: -7,\n                paddingBottom: 2\n              }}\n            />\n            <p>สแกนออก</p>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ScanInOut;\n","import React, { useEffect, useState } from \"react\";\nimport ScanList from \"./ScanInOutList\";\nimport SearchMember from \"../common/ScanInOut\";\n\nfunction ScanInOut() {\n  const [msg, setMsg] = useState(\"\");\n  const [show, setShow] = useState(true);\n  // Confirm From Search\n  const onConfirm = (msg, isshow) => {\n    console.log(msg, isshow);\n    setMsg(msg);\n    setShow(isshow);\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <section className=\"content\" style={{ marginTop: -16 }}>\n      <div className=\"container-fluid\">\n        <div className=\"card\">\n          <SearchMember confirm={onConfirm} />\n          <div className=\"card-body\">\n            <ScanList msg={msg} show={show} confirm={onConfirm} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default ScanInOut;\n","import React from \"react\";\nimport ScanComponent from \"../components/chkinout/ScanInOut\";\nfunction ScanInOut() {\n  return (\n    <div>\n      <ScanComponent />\n    </div>\n  );\n}\n\nexport default ScanInOut;\n"],"sourceRoot":""}