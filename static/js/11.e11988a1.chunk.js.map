{"version":3,"sources":["components/scans/components/common/Message.js","components/scans/components/locaction/ComponentToPrint.js","components/scans/components/locaction/LocactionList.js","components/scans/components/locaction/LocactionAdd.js","components/scans/components/locaction/Locaction.js","components/scans/containers/Locaction.js","managers/AuthService.js"],"names":["Message","props","className","style","marginBottom","alert","msg","ComponentToPrint","this","record","React","PureComponent","LocactionList","componentRef","useRef","dispatch","useDispatch","state","useSelector","scanlocation","indexData","indexStatus","iscount","isdata","map","rs","data","length","isCheckData","useEffect","indexLocation","TableList","index","key","scan_id","latitude","longitude","scan_location","status_id","trigger","content","current","pageStyle","verticalAlign","colSpan","ref","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","useState","location","setLocation","show","setShow","handleClose","handleSubmit","e","preventDefault","isGood","formIsValidSearch","confirm","coords","toFixed","console","log","textAlign","type","onClick","isGeolocationAvailable","isGeolocationEnabled","Modal","onHide","Header","closeButton","Title","Body","onSubmit","htmlFor","placeholder","value","disabled","isvalid","classNames","onChange","target","Footer","Button","variant","Locaction","Auth","AuthService","loggedIn","window","replace","marginTop","lat","lon","scanName","Promise","resolve","reject","createMsg","a","createLocation","then","res","setTimeout","reload","status","Swal","fire","icon","title","text","showConfirmButton","timer","catch","getToken","jwt","sign","localStorage","setItem","getItem","decode"],"mappings":"qGAAA,oBAeeA,IAbC,SAACC,GACf,OACE,yBAAKC,UAAU,MAAMC,MAAO,CAAEC,aAAc,KAC1C,yBAAKF,UAAU,UACb,yBAAKA,UAAS,UAAKD,EAAMI,MAAX,uBACZ,wFACCJ,EAAMK,S,0KCPJC,EAAb,kDACE,WAAYN,GAAQ,uCACZA,GAFV,qDAKI,OAAO,4BAAKO,KAAKP,MAAMQ,YAL3B,GAAsCC,IAAMC,eCmH7BC,EA3GO,WACpB,IAAMC,EAAeC,mBAEfC,EAAWC,cACXC,EAAQC,aAAY,SAACD,GAAD,OAAWA,EAAME,aAAaC,aAClDC,EAAcH,aAAY,SAACD,GAAD,OAAWA,EAAME,aAAaE,eALpC,MAO1B,WACE,IAAIC,EACAC,EAAS,GAWb,OAVAN,EAAMO,KAAI,SAACC,GACT,OAAuB,IAAnBA,EAAGC,KAAKC,OACVL,GAAU,GAGVA,GAAU,EACVC,EAASE,EAAGC,KACL,CAAEJ,UAASC,cAGf,CAAED,UAASC,UAGQK,GAApBN,EAvBkB,EAuBlBA,QAASC,EAvBS,EAuBTA,OACjBM,qBAAU,WACRd,EAASe,iBACR,CAACf,IAEJ,IAAMgB,EAAY,WAChB,OACE,yBAAK7B,UAAU,OACb,yBAAKA,UAAU,kCACb,2BAAOA,UAAU,gDACf,+BACE,4BACE,8DACA,0EACA,gFACA,0EACA,8DACA,sEAGJ,+BACGoB,EACCC,EAAOC,KAAI,SAACC,EAAIO,GACd,OACE,wBAAIC,IAAKR,EAAGS,SACV,4BAAKF,EAAQ,GACb,4BAAKP,EAAGU,UACR,4BAAKV,EAAGW,WACR,4BAAKX,EAAGY,eACR,4BACoB,IAAjBZ,EAAGa,UACF,0BAAMpC,UAAU,oBAAhB,gEAEA,0BAAMA,UAAU,mBAAhB,2DAGJ,4BAWE,kBAAC,IAAD,CACEqC,QAAS,kBAAM,oDACfC,QAAS,kBAAM3B,EAAa4B,SAE5BC,UAAU,oDAOpB,wBAAIT,IAAI,aACN,wBACE9B,MAAO,CAAEwC,cAAe,UACxBC,QAAQ,IACR1C,UAAU,eAEO,YAAhBmB,EACG,iGACA,oFAUtB,OACE,oCACE,kBAACU,EAAD,MACA,kBAAC,EAAD,CAAkBc,IAAKhC,M,6DCqCdiC,2BAAW,CACxBC,gBAAiB,CACfC,oBAAoB,GAEtBC,oBAAqB,KAJRH,EA5If,SAAsB7C,GAAQ,IAAD,EACKiD,mBAAS,IADd,mBACpBC,EADoB,KACVC,EADU,OAEHF,oBAAS,GAFN,mBAEpBG,EAFoB,KAEdC,EAFc,KAIrBC,EAAc,kBAAMD,GAAQ,IAa5BE,EAAe,SAACC,GACpBA,EAAEC,iBAVsB,WACxB,IAAIC,GAAS,EAKb,MAJiB,KAAbR,IACFC,EAAY,IACZO,GAAS,GAEJA,EAKHC,KACF3D,EAAM4D,QACJ5D,EAAM6D,OAAO3B,SAAS4B,QAAQ,GAC9B9D,EAAM6D,OAAO1B,UAAU2B,QAAQ,GAC/BZ,GAIFG,GAAQ,GACRF,EAAY,MAQhB,OAJAvB,qBAAU,WACRmC,QAAQC,IAAI,iBACX,CAACZ,IAGF,oCACE,yBAAKnD,UAAU,MAAMC,MAAO,CAAEC,aAAc,KAC1C,yBAAKF,UAAU,SAASC,MAAO,CAAE+D,UAAW,UAC1C,4BACEC,KAAK,SACLjE,UAAU,kBACVkE,QAtCS,kBAAMd,GAAQ,KAwCvB,uBAAGpD,UAAU,gBALf,4EAK6C,OAK/CD,EAAMoE,uBAKHpE,EAAMqE,qBAKPrE,EAAM6D,OACR,yBAAK5D,UAAU,OACb,yBAAKA,UAAU,UACb,kBAACqE,EAAA,EAAD,CAAOlB,KAAMA,EAAMmB,OAAQjB,GACzB,kBAACgB,EAAA,EAAME,OAAP,CAAcC,aAAW,GACvB,kBAACH,EAAA,EAAMI,MAAP,kFAEF,kBAACJ,EAAA,EAAMK,KAAP,KACE,0BAAMC,SAAU,SAACpB,GAAD,OAAOD,EAAaC,KAClC,yBAAKvD,UAAU,cACb,2BAAO4E,QAAQ,cAAc5E,UAAU,kBACpC,IADH,8CAIA,2BACEiE,KAAK,OACLjE,UAAU,eACV6E,YAAY,6CACZC,MAAO/E,EAAM6D,OAAO3B,SAAS4B,QAAQ,GACrCkB,UAAQ,KAGZ,yBAAK/E,UAAU,cACb,2BAAO4E,QAAQ,cAAc5E,UAAU,kBACpC,IADH,oDAIA,2BACEiE,KAAK,OACLjE,UAAU,eACV6E,YAAY,mDACZC,MAAO/E,EAAM6D,OAAO1B,UAAU2B,QAAQ,GACtCkB,UAAQ,KAGZ,yBAAK/E,UAAU,cACb,2BAAO4E,QAAQ,cAAc5E,UAAU,kBACpC,IADH,8CAEWiD,EAAS+B,SAEpB,2BACEf,KAAK,OAELjE,UAAWiF,IAAW,eAAgB,CACpC,2BAAgD,IAArBhC,EAAS+B,UAEtCH,YAAY,6CACZC,MAAO7B,EACPiC,SAAU,SAAC3B,GAAD,OAAOL,EAAYK,EAAE4B,OAAOL,aAK9C,kBAACT,EAAA,EAAMe,OAAP,CAAcpF,UAAU,4CACtB,kBAACqF,EAAA,EAAD,CAAQC,QAAQ,YAAYpB,QAASb,GAArC,sBAGA,kBAACgC,EAAA,EAAD,CACEC,QAAQ,UACRpB,QAAS,SAACX,GAAD,OAAOD,EAAaC,IAC7BwB,SAAuB,KAAb9B,GAHZ,4CAYR,yBAAKjD,UAAU,SAASC,MAAO,CAAE+D,UAAW,WAC1C,kBAAC,IAAD,CACE5D,IAAI,wHACJD,MAAM,sBA5EV,kBAAC,IAAD,CACEC,IAAI,2JACJD,MAAM,wBAPR,kBAAC,IAAD,CACEC,IAAI,2MACJD,MAAM,4B,QCiCDoF,MArFf,WACE,IAAM1E,EAAWC,cACX0E,EAAO,IAAIC,IAAY,0BAiE7B,OALA9D,qBAAU,WACH6D,EAAKE,YACRC,OAAO1C,SAAS2C,QAAQ,qCAEzB,CAACJ,EAAM3E,IAER,6BAASb,UAAU,UAAUC,MAAO,CAAE4F,WAAY,KAChD,yBAAK7F,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAc2D,QArEV,SAAC1B,EAAUC,EAAWe,GACtC,IAAMzB,EAAO,CACXsE,IAAK7D,EACL8D,IAAK7D,EACL8D,SAAU/C,GAEC,IAAIgD,SAAQ,SAAUC,EAASC,GAAS,SACpCC,IADmC,2EAClD,sBAAAC,EAAA,sEACexF,EAASyF,YAAe9E,IAAO+E,MAAK,SAACC,GAChD,OAAOA,EAAI,GAAGpG,OAFlB,oFADkD,sBAOlD,sBAAC,sBAAAiG,EAAA,sEACuBD,IADvB,OAEmB,uBAFnB,QAGGK,YAAW,WACTd,OAAO1C,SAASyD,WACf,MACHR,GAAQ,IAERC,GAAO,GARV,0CAAD,MAcKI,MAAK,SAACI,GACXA,EACIC,IAAKC,KAAK,CAERC,KAAM,UACNC,MAAO,uCACPC,KAAM,yJACNC,mBAAmB,EACnBC,MAAO,OAETN,IAAKC,KAAK,CAERC,KAAM,UACNC,MAAO,6CACPC,KAAM,mGACNC,mBAAmB,EACnBC,MAAO,UAEZC,OAAM,SAAC5D,GACRqD,IAAKC,KAAK,CAERC,KAAM,QACNC,MAAO,6CACPC,KAAM,mGACNC,mBAAmB,EACnBC,MAAO,aAkBC,kBAAC,EAAD,aC1ED3B,UARf,WACE,OACE,6BACE,kBAAC,EAAD,S,+GCFeE,E,mGAIjB,QADcnF,KAAK8G,a,+BAIZ5F,GACP,IACM6F,EAAMC,IAAK9F,EADF,UAGf+F,aAAaC,QAAQ,WAAYH,K,iCAIjC,OAAOE,aAAaE,QAAQ,c,mCAI5B,OAAOC,YAAOpH,KAAK8G,gB","file":"static/js/11.e11988a1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Message = (props) => {\n  return (\n    <div className=\"row\" style={{ marginBottom: 10 }}>\n      <div className=\"col-12\">\n        <div className={`${props.alert} alert-dismissible`}>\n          <h5>แจ้งเตือน !</h5>\n          {props.msg}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nexport class ComponentToPrint extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return <h1>{this.props.record}</h1>;\n  }\n}\n","import React, { useEffect, useRef } from \"react\";\nimport ReactToPrint from \"react-to-print\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { indexLocation } from \"../../../../reduxs/actions/ScanLocation\";\n\nimport { ComponentToPrint } from \"./ComponentToPrint\";\n\nconst LocactionList = () => {\n  const componentRef = useRef();\n\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.scanlocation.indexData);\n  const indexStatus = useSelector((state) => state.scanlocation.indexStatus);\n\n  function isCheckData() {\n    let iscount;\n    var isdata = [];\n    state.map((rs) => {\n      if (rs.data.length === 0) {\n        iscount = false;\n        return iscount;\n      } else {\n        iscount = true;\n        isdata = rs.data;\n        return { iscount, isdata };\n      }\n    });\n    return { iscount, isdata };\n  }\n\n  const { iscount, isdata } = isCheckData();\n  useEffect(() => {\n    dispatch(indexLocation());\n  }, [dispatch]);\n\n  const TableList = () => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-12 table table-responsive \">\n          <table className=\"table table-bordered table-hover text-nowrap\">\n            <thead>\n              <tr>\n                <td>ลำดับ</td>\n                <td>ละติจูด</td>\n                <td>ลองติจูด</td>\n                <td>สถานที่</td>\n                <td>สถานะ</td>\n                <td>คำสั่ง</td>\n              </tr>\n            </thead>\n            <tbody>\n              {iscount ? (\n                isdata.map((rs, index) => {\n                  return (\n                    <tr key={rs.scan_id}>\n                      <td>{index + 1}</td>\n                      <td>{rs.latitude}</td>\n                      <td>{rs.longitude}</td>\n                      <td>{rs.scan_location}</td>\n                      <td>\n                        {rs.status_id === 1 ? (\n                          <span className=\"badge bg-success\">เปิดใช้งาน</span>\n                        ) : (\n                          <span className=\"badge bg-danger\">ปิดใช้งาน</span>\n                        )}\n                      </td>\n                      <td>\n                        {/* <button\n                          className=\"btn btn-default\"\n                          onClick={handlePrint}\n                        >\n                          <i\n                            className=\"fas fa-qrcode\"\n\n                            // onChange={setRecord(\"Hello\")}\n                          />\n                        </button> */}\n                        <ReactToPrint\n                          trigger={() => <button>Print this out!</button>}\n                          content={() => componentRef.current}\n                          // onBeforePrint={() => setRecord(rs)}\n                          pageStyle=\"@page { size: 11.694in 8.264in landscape} \"\n                        />\n                      </td>\n                    </tr>\n                  );\n                })\n              ) : (\n                <tr key=\"emtpydata\">\n                  <td\n                    style={{ verticalAlign: \"middle\" }}\n                    colSpan=\"7\"\n                    className=\"text-center\"\n                  >\n                    {indexStatus === \"loading\"\n                      ? \"ดาวน์โหลดข้อมูล ...\"\n                      : \"--- ไม่มีข้อมูล ---\"}\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <>\n      <TableList />\n      <ComponentToPrint ref={componentRef} />\n    </>\n  );\n};\n\nexport default LocactionList;\n","import React, { useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\n\nimport { Modal, Button } from \"react-bootstrap\";\nimport { geolocated } from \"react-geolocated\";\n\nimport ScanInOutMessage from \"../common/Message\";\n\nfunction LocactionAdd(props) {\n  const [location, setLocation] = useState(\"\");\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  // handle from validate\n  const formIsValidSearch = () => {\n    let isGood = true;\n    if (location === \"\") {\n      setLocation(\"\");\n      isGood = false;\n    }\n    return isGood;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (formIsValidSearch()) {\n      props.confirm(\n        props.coords.latitude.toFixed(4),\n        props.coords.longitude.toFixed(4),\n        location\n      );\n\n      // Hide Popup\n      setShow(false);\n      setLocation(\"\");\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Loading ...\");\n  }, [show]);\n\n  return (\n    <>\n      <div className=\"row\" style={{ marginBottom: 10 }}>\n        <div className=\"col-12\" style={{ textAlign: \"right\" }}>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            onClick={handleShow}\n          >\n            <i className=\"fas fa-plus\" /> เพิ่มจุดสแกน{\" \"}\n          </button>\n        </div>\n      </div>\n\n      {!props.isGeolocationAvailable ? (\n        <ScanInOutMessage\n          msg=\"--- เบราว์เซอร์ของคุณไม่รองรับ แนะนำ Chome---\"\n          alert=\"alert alert-warning\"\n        />\n      ) : !props.isGeolocationEnabled ? (\n        <ScanInOutMessage\n          msg=\"--- กรุณาเปิด GPS มือถือของท่าน &hellip; ---\"\n          alert=\"alert alert-warning\"\n        />\n      ) : props.coords ? (\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <Modal show={show} onHide={handleClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>เพิ่มจุดสแกน</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <form onSubmit={(e) => handleSubmit(e)}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"InputMember\" className=\"col-form-label\">\n                      {\" \"}\n                      ละติจูด\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"ละติจูด\"\n                      value={props.coords.latitude.toFixed(4)}\n                      disabled\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"InputMember\" className=\"col-form-label\">\n                      {\" \"}\n                      ลองติจูด\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"ลองติจูด\"\n                      value={props.coords.longitude.toFixed(4)}\n                      disabled\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"InputMember\" className=\"col-form-label\">\n                      {\" \"}\n                      สถานที่ {location.isvalid}\n                    </label>\n                    <input\n                      type=\"text\"\n                      // className=\"form-control\"\n                      className={classNames(\"form-control\", {\n                        \"form-control is-invalid\": location.isvalid === false\n                      })}\n                      placeholder=\"สถานที่\"\n                      value={location}\n                      onChange={(e) => setLocation(e.target.value)}\n                    />\n                  </div>\n                </form>\n              </Modal.Body>\n              <Modal.Footer className=\"modal-footer justify-content-between p-0\">\n                <Button variant=\"secondary\" onClick={handleClose}>\n                  ปิด\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  onClick={(e) => handleSubmit(e)}\n                  disabled={location === \"\" ? true : false}\n                >\n                  บันทึก\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        </div>\n      ) : (\n        <div className=\"col-12\" style={{ textAlign: \"center\" }}>\n          <ScanInOutMessage\n            msg=\"--- กำลังค้นหาตำแหน่ง &hellip; ---\"\n            alert=\"alert alert-info\"\n          />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: false\n  },\n  userDecisionTimeout: 5000\n})(LocactionAdd);\n","import React, { useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport LocactionList from \"./LocactionList\";\nimport LocactionAdd from \"./LocactionAdd\";\nimport AuthService from \"../../../../managers/AuthService\";\n\nimport { useDispatch } from \"react-redux\";\nimport { createLocation } from \"../../../../reduxs/actions/ScanLocation\";\n\nfunction Locaction() {\n  const dispatch = useDispatch();\n  const Auth = new AuthService(\"http://localhost:3000/\");\n\n  // Confirm From Search\n  const onConfirm = (latitude, longitude, location) => {\n    const data = {\n      lat: latitude,\n      lon: longitude,\n      scanName: location\n    };\n    let Create = new Promise(function (resolve, reject) {\n      async function createMsg() {\n        return await dispatch(createLocation(data)).then((res) => {\n          return res[0].msg;\n        });\n      }\n      // get result by function\n      (async function () {\n        let resStatus = await createMsg();\n        if (resStatus === \"created successful\") {\n          setTimeout(() => {\n            window.location.reload();\n          }, 1600);\n          resolve(true);\n        } else {\n          reject(false);\n        }\n      })();\n    });\n\n    // promiss status and msg\n    Create.then((status) => {\n      status\n        ? Swal.fire({\n            // position: \"top-center\",\n            icon: \"success\",\n            title: \"สำเร็จ\",\n            text: \"ลงทะเบียนจุดสแกนเรียบร้อย\",\n            showConfirmButton: false,\n            timer: 1500\n          })\n        : Swal.fire({\n            // position: \"top-center\",\n            icon: \"warning\",\n            title: \"ผิดพลาด\",\n            text: \"ลงทะเบียนผิดพลาด\",\n            showConfirmButton: false,\n            timer: 1500\n          });\n    }).catch((e) => {\n      Swal.fire({\n        // position: \"top-center\",\n        icon: \"error\",\n        title: \"ผิดพลาด\",\n        text: \"ลงทะเบียนผิดพลาด\",\n        showConfirmButton: false,\n        timer: 1500\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (!Auth.loggedIn()) {\n      window.location.replace(\"/rehscan/#/scan/member-register\");\n    }\n  }, [Auth, dispatch]);\n  return (\n    <section className=\"content\" style={{ marginTop: -16 }}>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card\">\n              <div className=\"card-body \">\n                <LocactionAdd confirm={onConfirm} />\n                <LocactionList />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Locaction;\n","import React from \"react\";\nimport LocactionComponent from \"../components/locaction/Locaction\";\nfunction Locaction() {\n  return (\n    <div>\n      <LocactionComponent />\n    </div>\n  );\n}\n\nexport default Locaction;\n","import decode from \"jwt-decode\";\nimport sign from \"jwt-encode\";\n\nexport default class AuthService {\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken(); // GEtting token from localstorage\n    return !!token; // handwaiving here\n  }\n\n  setToken(data) {\n    const secret = \"secret\";\n    const jwt = sign(data, secret);\n    // Saves user token to localStorage\n    localStorage.setItem(\"id_token\", jwt);\n  }\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem(\"id_token\");\n  }\n  getProfile() {\n    // Using jwt-decode npm package to decode the token\n    return decode(this.getToken());\n  }\n}\n"],"sourceRoot":""}