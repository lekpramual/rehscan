{"version":3,"sources":["assets/ico/003-fingerprint-2.svg","components/scans/components/chkinout/arePoints.js","components/scans/components/chkinout/ScanInOutLocaction.js","components/scans/components/chkinout/ScanInOutList.js","components/scans/components/common/ScanInOut.js","components/scans/components/chkinout/ScanInOut.js","components/scans/containers/ScanInOut.js"],"names":["module","exports","arePointsNear","geolocated","positionOptions","enableHighAccuracy","maximumAge","timeout","Infinity","userDecisionTimeout","props","useEffect","console","log","Reload","isGeolocationAvailable","isGeolocationEnabled","coords","latitude","longitude","ScanInOutList","useState","setQrscan","loadLocation","setLoadLocation","show","msg","delay","onError","err","error","onScan","e","data","lat","lng","undefined","obj","JSON","parse","handleScan","style","width","ScanInOut","className","padding","type","onClick","confirm","src","memberchkinout","alt","marginRight","marginLeft","paddingBottom","setMsg","setShow","onConfirm","isshow","marginTop"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,+C,oECU5BC,I,2BCmBAC,uBAAW,CACxBC,gBAAiB,CACfC,oBAAoB,EACpBC,WAAY,IACZC,QAASC,KAEXC,oBAAqB,KANRN,EA1BY,SAACO,GAI1B,OAHAC,qBAAU,WACRC,QAAQC,IAAI,sBAAuBH,EAAMI,UACxC,CAACJ,EAAMI,SACFJ,EAAMK,uBAETL,EAAMM,qBAEPN,EAAMO,OACR,+BACE,+BACE,4BACE,wCACA,4BAAKP,EAAMO,OAAOC,WAEpB,4BACE,yCACA,4BAAKR,EAAMO,OAAOE,cAKxB,iEAfA,2DAFA,6ECyCWC,G,OAxCO,SAACV,GAAW,IAAD,EACHW,mBAAS,IADN,mBAChBC,GADgB,aAESD,oBAAS,GAFlB,mBAExBE,EAFwB,KAEVC,EAFU,KAoB/B,OAJAb,qBAAU,WACRC,QAAQC,IAAI,gBACX,CAACH,EAAMe,KAAMf,EAAMgB,MAED,UAAdhB,EAAMgB,KAAiC,WAAdhB,EAAMgB,IACpChB,EAAMe,KACJ,oCACE,kBAAC,IAAD,CACEE,MAAO,IACPC,QAbY,SAACC,GACnBjB,QAAQkB,MAAMD,IAaRE,OAAQ,SAACC,GAAD,OAvBG,SAACC,EAAMC,EAAKC,GAC7B,GAAa,OAATF,QAA0BG,IAATH,EAAoB,CACvC,IAAII,EAAMC,KAAKC,MAAMN,GACrBX,EAAUe,GACVb,GAAiBD,GACjBX,QAAQC,IAAI,aAkBO2B,CAAWR,IAC1BS,MAAO,CAAEC,MAAO,UAGlB,kBAAC,EAAD,CAAoB5B,OAAQS,KAG9B,GAGF,4C,kBCKWoB,MA/Cf,SAAmBjC,GACjB,OACE,yBAAKkC,UAAU,eACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,kBAAkBH,MAAO,CAAEI,QAAS,IACjD,4BACEC,KAAK,SACLF,UAAU,mCACVG,QAAS,kBAAMrC,EAAMsC,QAAQ,SAAS,KAEtC,yBACEC,IAAKC,IACLC,IAAI,eACJV,MAAO,CACLC,MAAO,GACPU,YAAa,EACbC,YAAa,EACbC,cAAe,KAGnB,iFAGJ,yBAAKV,UAAU,kBAAkBH,MAAO,CAAEI,QAAS,IACjD,4BACEC,KAAK,SACLF,UAAU,mCACVG,QAAS,kBAAMrC,EAAMsC,QAAQ,UAAU,KAEvC,yBACEC,IAAKC,IACLC,IAAI,gBACJV,MAAO,CACLC,MAAO,GACPU,YAAa,EACbC,YAAa,EACbC,cAAe,KAGnB,8ECZGX,MA1Bf,WAAsB,IAAD,EACGtB,mBAAS,IADZ,mBACZK,EADY,KACP6B,EADO,OAEKlC,oBAAS,GAFd,mBAEZI,EAFY,KAEN+B,EAFM,KAIbC,EAAY,SAAC/B,EAAKgC,GACtB9C,QAAQC,IAAIa,EAAKgC,GACjBH,EAAO7B,GACP8B,EAAQE,IAKV,OAFA/C,qBAAU,cAAU,IAGlB,6BAASiC,UAAU,UAAUH,MAAO,CAAEkB,WAAY,KAChD,yBAAKf,UAAU,mBACb,yBAAKA,UAAU,QACb,kBAAC,EAAD,CAAcI,QAASS,IACvB,yBAAKb,UAAU,aACb,kBAAC,EAAD,CAAUlB,IAAKA,EAAKD,KAAMA,EAAMuB,QAASS,SCZtCd,UARf,WACE,OACE,6BACE,kBAAC,EAAD","file":"static/js/8.0e783268.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/003-fingerprint-2.2e6dfe5e.svg\";","function arePointsNear(checkPoint, centerPoint, km) {\n  var ky = 40000 / 360;\n  var kx = Math.cos((Math.PI * centerPoint.lat) / 180.0) * ky;\n  var dx = Math.abs(centerPoint.lng - checkPoint.lng) * kx;\n  var dy = Math.abs(centerPoint.lat - checkPoint.lat) * ky;\n\n  // console.log(dx * dx + dy * dy);\n  return Math.sqrt(dx * dx + dy * dy) <= km;\n}\n\nexport default arePointsNear;\n","import React, { useEffect } from \"react\";\nimport { geolocated } from \"react-geolocated\";\n\nconst ScanInOutLocaction = (props) => {\n  useEffect(() => {\n    console.log(\"Reload Locaction...\", props.Reload);\n  }, [props.Reload]);\n  return !props.isGeolocationAvailable ? (\n    <div>Your browser does not support Geolocation</div>\n  ) : !props.isGeolocationEnabled ? (\n    <div>Geolocation is not enabled</div>\n  ) : props.coords ? (\n    <table>\n      <tbody>\n        <tr>\n          <td>latitude</td>\n          <td>{props.coords.latitude}</td>\n        </tr>\n        <tr>\n          <td>longitude</td>\n          <td>{props.coords.longitude}</td>\n        </tr>\n      </tbody>\n    </table>\n  ) : (\n    <div>Getting the location data&hellip; </div>\n  );\n};\n\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: true,\n    maximumAge: 100,\n    timeout: Infinity\n  },\n  userDecisionTimeout: 5000\n})(ScanInOutLocaction);\n","import React, { useState, useEffect } from \"react\";\nimport arePoints from \"./arePoints\";\nimport QrReader from \"react-qr-reader\";\nimport { geolocated } from \"react-geolocated\";\n\nimport ScanInOutMessage from \"./ScanInOutMessage\";\nimport ScanInOutLocaction from \"./ScanInOutLocaction\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nconst ScanInOutList = (props) => {\n  const [qrscan, setQrscan] = useState([]);\n  const [loadLocation, setLoadLocation] = useState(false);\n  const handleScan = (data, lat, lng) => {\n    if (data !== null && data !== undefined) {\n      var obj = JSON.parse(data);\n      setQrscan(obj);\n      setLoadLocation(!loadLocation);\n      console.log(\"Scan ...\");\n    }\n  };\n\n  const handleError = (err) => {\n    console.error(err);\n  };\n\n  useEffect(() => {\n    console.log(\"Reload ...\");\n  }, [props.show, props.msg]);\n\n  return props.msg === \"chkin\" || props.msg === \"chkout\" ? (\n    props.show ? (\n      <>\n        <QrReader\n          delay={300}\n          onError={handleError}\n          onScan={(e) => handleScan(e)}\n          style={{ width: \"100%\" }}\n        />\n\n        <ScanInOutLocaction Reload={loadLocation} />\n      </>\n    ) : (\n      \"\"\n    )\n  ) : (\n    <h1>Not Submit</h1>\n  );\n};\n\nexport default ScanInOutList;\n","import React from \"react\";\nimport memberchkinout from \"../../../../assets/ico/003-fingerprint-2.svg\";\n\nfunction ScanInOut(props) {\n  return (\n    <div className=\"card-header\">\n      <div className=\"row\">\n        <div className=\"col-md-6 col-12\" style={{ padding: 2 }}>\n          <button\n            type=\"submit\"\n            className=\"btn btn-default btn-lg btn-block\"\n            onClick={() => props.confirm(\"chkin\", true)}\n          >\n            <img\n              src={memberchkinout}\n              alt=\"memberchk in\"\n              style={{\n                width: 50,\n                marginRight: 5,\n                marginLeft: -7,\n                paddingBottom: 2\n              }}\n            />\n            <p>สแกนเข้า</p>\n          </button>\n        </div>\n        <div className=\"col-md-6 col-12\" style={{ padding: 2 }}>\n          <button\n            type=\"submit\"\n            className=\"btn btn-default btn-lg btn-block\"\n            onClick={() => props.confirm(\"chkout\", true)}\n          >\n            <img\n              src={memberchkinout}\n              alt=\"memberchk out\"\n              style={{\n                width: 50,\n                marginRight: 5,\n                marginLeft: -7,\n                paddingBottom: 2\n              }}\n            />\n            <p>สแกนออก</p>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ScanInOut;\n","import React, { useEffect, useState } from \"react\";\nimport ScanList from \"./ScanInOutList\";\nimport SearchMember from \"../common/ScanInOut\";\n\nfunction ScanInOut() {\n  const [msg, setMsg] = useState(\"\");\n  const [show, setShow] = useState(true);\n  // Confirm From Search\n  const onConfirm = (msg, isshow) => {\n    console.log(msg, isshow);\n    setMsg(msg);\n    setShow(isshow);\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <section className=\"content\" style={{ marginTop: -16 }}>\n      <div className=\"container-fluid\">\n        <div className=\"card\">\n          <SearchMember confirm={onConfirm} />\n          <div className=\"card-body\">\n            <ScanList msg={msg} show={show} confirm={onConfirm} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default ScanInOut;\n","import React from \"react\";\nimport ScanComponent from \"../components/chkinout/ScanInOut\";\nfunction ScanInOut() {\n  return (\n    <div>\n      <ScanComponent />\n    </div>\n  );\n}\n\nexport default ScanInOut;\n"],"sourceRoot":""}